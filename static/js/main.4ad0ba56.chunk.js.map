{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","title","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","React","Component","App","onSearchChange","event","setState","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.4ad0ba56.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({name, email, id}) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}200x200`} alt=\"{name}\" title=\"{name}\"/>\n    \n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    </div>\n    \n  )\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  \n    // const CardsArray = robots.map((user, i) => {\n    //     return (\n    //       <Card\n    //         key={i}\n    //         id={robots[i].id}\n    //         name={robots[i].name}\n    //         email={robots[i].email}\n    //         />\n    //     );\n    //   })\n    return (\n      <div>\n        {\n          robots.map((user, i) => {\n            return (\n              <Card\n                key={i}\n                id={robots[i].id}\n                name={robots[i].name}\n                email={robots[i].email}\n                />\n            );\n          })\n        }\n      </div>\n    );\n  }\n  \n  export default CardList;","import React from 'react'\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;\n","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component{\n  constructor(props) {\n    super();\n    this.state = {\n        hasError: false \n    }\n  }\n  render() {\n    if (this.state.hasError) {\n    return <h1>Opps. That is not good</h1>\n  }\n    return this.props.children\n}\n}\n\nexport default ErrorBoundary\n","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {this.setState({ robots: users})});\n  }\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n  render(){\n    const { robots, searchfield } = this.state;\n    const filteredRobots = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading</h1> :\n      (\n      <div className='tc'>\n      <h1 className='f1'>RoboFriends</h1>\n      <SearchBox searchChange={this.onSearchChange}/>\n      <Scroll>\n        <ErrorBoundary >\n          <CardList robots={filteredRobots}/>\n        </ErrorBoundary>\n      </Scroll>\n      </div>\n     );\n  }\n}\n\nexport default App; \n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './containers/App';\n\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n\n"],"sourceRoot":""}